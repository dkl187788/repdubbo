 <beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:context="http://www.springframework.org/schema/context"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
 
    <!-- 引入外部properties文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />
 
    
    
    <!-- 配置读数据源 -->
     <bean id="dataSourceRead" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
         <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.slave.url}" />
        <property name="username" value="${jdbc.slave.username}" />
         <property name="password" value="${jdbc.slave.password}" />
        <!-- 配置初始化大小、最小、最大 -->
       <property name="initialSize" value="${jdbc.slave.initialSize}" />
        <property name="minIdle" value="${jdbc.slave.minIdle}" />
        <property name="maxActive" value="${jdbc.slave.maxActive}" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="60000" />
      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT ‘1‘" />
         <property name="testWhileIdle" value="true" />
         <property name="testOnBorrow" value="false" />
         <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 mysql false -->
         <property name="poolPreparedStatements" value="false" />
         <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
         <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="config,stat,log4j,wall" />
         <property name="connectionProperties" value="config.decrypt=false" />
         
     </bean>
 
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceRead" />
         <!--configLocation属性指定mybatis的核心配置文件 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/ailk/dubbo/mapping/*Mapper.xml</value>				
			</list>
		</property>
    </bean>
     <!-- ====================================================== Add MyBatis Support End ====================================================== -->
 </beans>